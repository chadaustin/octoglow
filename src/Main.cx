declare require: (String) -> a;

declare process: {
    argv: Array String,
};

let http = require("http");
let console = require("console");
let fs = require("fs");

let port = 9999;

fun errorResponse(response, statusCode: Number, statusMessage: String): Unit {
    response.statusCode = statusCode;
    response.statusMessage = statusMessage;
    response.end(toString(statusCode) + " - " + statusMessage);
}

fun successResponse(response, content: String) {
    response.statusCode = 200;
    response.statusMessage = "OK";
    response.end(content);
}

fun handleFoldersRequest(response, root) {
    let rv = [];
    let contents: Array String = fs.readdirSync(root);
    
    /*
    contents->each(fun(name) {
    });
    */

    /*
    for name in contents {
        if name->endswith(".jpeg") {
            /*
            rv->append(name);
            */
        };
    };
    */

    each(contents, fun(name: String) {
        rv->append(name);
    });
}

fun handleRequest(request, response) {
    if request.method != "GET" {
        return errorResponse(response, 405, "Method not supported");
    };

    let root = get(process.argv, 2);

    if request.url == "/folders" {
        handleFoldersRequest(response, root);
    } else if request.url == "/contents" {
    } else if request.url == "/photo" {
    } else if request.url == "/" {
        return successResponse(response, "<html><body>data!</body></html>");
    } else if request.url == "/asset" {
    } else {
        return errorResponse(response, 404, "Not found");
    };
}

fun main() {
    let server = http.createServer(handleRequest);

    server.listen(port, fun() {
        console.log("Server listening on: http://localhost:%s", port);
    });
}

let _ = main();
